/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface CouponDappCouponDappInterface extends ethers.utils.Interface {
  functions: {
    "coupons(bytes32)": FunctionFragment;
    "newCoupon(bytes32,uint256)": FunctionFragment;
    "redeemCoupon(bytes32,bytes)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "coupons", values: [BytesLike]): string;
  encodeFunctionData(
    functionFragment: "newCoupon",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "redeemCoupon",
    values: [BytesLike, BytesLike]
  ): string;

  decodeFunctionResult(functionFragment: "coupons", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "newCoupon", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "redeemCoupon",
    data: BytesLike
  ): Result;

  events: {
    "Created(address,uint256,uint256)": EventFragment;
    "Redeemed(address,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Created"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Redeemed"): EventFragment;
}

export class CouponDappCouponDapp extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: CouponDappCouponDappInterface;

  functions: {
    coupons(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      amount: BigNumber;
      status: number;
      creator: string;
      0: BigNumber;
      1: number;
      2: string;
    }>;

    "coupons(bytes32)"(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      amount: BigNumber;
      status: number;
      creator: string;
      0: BigNumber;
      1: number;
      2: string;
    }>;

    newCoupon(
      _couponHash: BytesLike,
      _amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    "newCoupon(bytes32,uint256)"(
      _couponHash: BytesLike,
      _amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    redeemCoupon(
      _hash: BytesLike,
      _couponBytes: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "redeemCoupon(bytes32,bytes)"(
      _hash: BytesLike,
      _couponBytes: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  coupons(
    arg0: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    amount: BigNumber;
    status: number;
    creator: string;
    0: BigNumber;
    1: number;
    2: string;
  }>;

  "coupons(bytes32)"(
    arg0: BytesLike,
    overrides?: CallOverrides
  ): Promise<{
    amount: BigNumber;
    status: number;
    creator: string;
    0: BigNumber;
    1: number;
    2: string;
  }>;

  newCoupon(
    _couponHash: BytesLike,
    _amount: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  "newCoupon(bytes32,uint256)"(
    _couponHash: BytesLike,
    _amount: BigNumberish,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  redeemCoupon(
    _hash: BytesLike,
    _couponBytes: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "redeemCoupon(bytes32,bytes)"(
    _hash: BytesLike,
    _couponBytes: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    coupons(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      amount: BigNumber;
      status: number;
      creator: string;
      0: BigNumber;
      1: number;
      2: string;
    }>;

    "coupons(bytes32)"(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      amount: BigNumber;
      status: number;
      creator: string;
      0: BigNumber;
      1: number;
      2: string;
    }>;

    newCoupon(
      _couponHash: BytesLike,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "newCoupon(bytes32,uint256)"(
      _couponHash: BytesLike,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    redeemCoupon(
      _hash: BytesLike,
      _couponBytes: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "redeemCoupon(bytes32,bytes)"(
      _hash: BytesLike,
      _couponBytes: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    Created(User: string | null, Amount: null, _TimeStamp: null): EventFilter;

    Redeemed(User: string | null, Amount: null, _TimeStamp: null): EventFilter;
  };

  estimateGas: {
    coupons(arg0: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "coupons(bytes32)"(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    newCoupon(
      _couponHash: BytesLike,
      _amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    "newCoupon(bytes32,uint256)"(
      _couponHash: BytesLike,
      _amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    redeemCoupon(
      _hash: BytesLike,
      _couponBytes: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "redeemCoupon(bytes32,bytes)"(
      _hash: BytesLike,
      _couponBytes: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    coupons(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "coupons(bytes32)"(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    newCoupon(
      _couponHash: BytesLike,
      _amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    "newCoupon(bytes32,uint256)"(
      _couponHash: BytesLike,
      _amount: BigNumberish,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    redeemCoupon(
      _hash: BytesLike,
      _couponBytes: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "redeemCoupon(bytes32,bytes)"(
      _hash: BytesLike,
      _couponBytes: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
